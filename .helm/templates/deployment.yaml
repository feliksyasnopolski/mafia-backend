apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
      labels:
        {{- include ".helm.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include ".helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command:
          #   - bundle
          # args:
          #   - exec
          #   - rails
          #   - "server"
          #   - "-b"
          #   - "0.0.0.0"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /up
              port: http
          readinessProbe:
            httpGet:
              path: /up
              port: http
          env:
            - name: RAILS_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.railsMasterKey }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.dbConnection}}
            - name: RAILS_ENV
              value: production
            - name: UPLOAD_APP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.appUploadCredentials}}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.redisConnection}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        - name: cable
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bundle
          args:
            - exec 
            - puma 
            - "-p" 
            - "28080"
            - "cable/config.ru"
          ports:
            - name: http
              containerPort: 28080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 28080
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 28080
            initialDelaySeconds: 15
            periodSeconds: 10
          env:
            - name: RAILS_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.railsMasterKey }}            
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.dbConnection}}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appSecrets.redisConnection}}
            - name: RAILS_ENV
              value: production
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}